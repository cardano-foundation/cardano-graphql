name: Post-integration

on:
  push:
    branches:
      - master

jobs:
  push-docker-build:
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
        network: [ "mainnet", "preprod", "preview", "sanchonet" ]

    runs-on: ${{ matrix.os }}
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v2.3.1
        with:
          submodules: true

      - name: 🧰 Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: 🐳 Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: 📝 Base Variables
        id: base-variables
        run: |
          echo ::set-output name=cardano-graphql-server-image::cardanofoundation/cardano-graphql
          echo ::set-output name=cardano-graphql-hasura-image::cardanofoundation/cardano-graphql-hasura

      - name: 🔨 Build and push Cardano GraphQL Server Dockerfile (default)
        if: ${{ matrix.network == 'mainnet' }}
        uses: docker/build-push-action@v2
        with:
          build-args: NETWORK=${{ matrix.network }}
          context: .
          push: true
          tags: ${{ steps.base-variables.outputs.cardano-graphql-server-image }}:${{ github.sha }}, ${{ steps.base-variables.outputs.cardano-graphql-server-image }}:master
          target: server
          cache-from: type=registry,ref=${{ steps.base-variables.outputs.cardano-graphql-server-image }}:latest
          cache-to: type=inline
      
      - name: 🔨 Build and push Cardano GraphQL Server Dockerfile (network)
        uses: docker/build-push-action@v2
        with:
          build-args: NETWORK=${{ matrix.network }}
          context: .
          push: true
          tags: ${{ steps.base-variables.outputs.cardano-graphql-server-image }}:${{ github.sha }}-${{ matrix.network }}, ${{ steps.base-variables.outputs.cardano-graphql-server-image }}:master-${{ matrix.network }}
          target: server
          cache-from: type=registry,ref=${{ steps.base-variables.outputs.cardano-graphql-server-image }}:master-${{ matrix.network }}
          cache-to: type=inline
      
      - name: 🔨 Build and push Cardano GraphQL Hasura Dockerfile
        uses: docker/build-push-action@v2
        with:
          build-args: NETWORK=${{ matrix.network }}
          context: ./packages/api-cardano-db-hasura/hasura
          file: ./packages/api-cardano-db-hasura/hasura/Dockerfile
          push: true
          tags: ${{ steps.base-variables.outputs.cardano-graphql-hasura-image }}:${{ github.sha }}, ${{ steps.base-variables.outputs.cardano-graphql-hasura-image }}:master
          cache-from: type=registry,ref=${{ steps.base-variables.outputs.cardano-graphql-hasura-image }}:master-${{ matrix.network }}
          cache-to: type=inline    
          
