(this["webpackJsonpcardano-graphql-docs"]=this["webpackJsonpcardano-graphql-docs"]||[]).push([[0],{206:function(n,e,t){n.exports=t(207)},207:function(n,e,t){"use strict";t.r(e);var o=t(6),a=t.n(o),r=t(42),_=t.n(r),i=t(178),s=t(112),l=t(94);_.a.render(a.a.createElement(i.Voyager,{introspection:{data:Object(s.a)(Object(l.b)(t(388)))},workerURI:"/cardano-graphql/voyager.worker.js"}),document.getElementById("root"))},388:function(n,e){n.exports="schema {\n  mutation: Mutation\n  query: Query\n}\n\nscalar AssetFingerprint\nscalar Hex\nscalar BigInt\nscalar DateTime\nscalar Hash28Hex\nscalar Hash32Hex\nscalar IPv4\nscalar IPv6\nscalar JSON\nscalar JSONObject\nscalar Lovelace\nscalar Percentage\nscalar StakeAddress\nscalar StakePoolID\nscalar Timestamp\nscalar VRFVerificationKey\n\ntype Mutation {\n  # Submit a signed transaction to the network\n  submitTransaction (transaction: String!): TransactionSubmitResponse!\n}\n\ntype Query {\n  activeStake (\n    limit: Int\n    order_by: [ActiveStake_order_by!]\n    offset: Int\n    where: ActiveStake_bool_exp\n  ): [ActiveStake]!\n  activeStake_aggregate (\n    limit: Int\n    order_by: [ActiveStake_order_by!]\n    offset: Int\n    where: ActiveStake_bool_exp\n  ): ActiveStake_aggregate!\n  ada: Ada!\n  assets (\n    limit: Int\n    order_by: [Asset_order_by!]\n    offset: Int\n    where: Asset_bool_exp\n  ): [Asset]!\n  assets_aggregate (\n    limit: Int\n    order_by: [Asset_order_by!]\n    offset: Int\n    where: Asset_bool_exp\n  ): Asset_aggregate!\n  blocks (\n    limit: Int\n    order_by: [Block_order_by!]\n    offset: Int\n    where: Block_bool_exp\n  ): [Block]!\n  blocks_aggregate (\n    limit: Int\n    order_by: [Block_order_by!]\n    offset: Int\n    where: Block_bool_exp\n  ): Block_aggregate!\n  cardano: Cardano!\n  cardanoDbMeta: CardanoDbMeta!\n  collateralInputs (\n    limit: Int\n    order_by: [CollateralInput_order_by!]\n    offset: Int\n    where: CollateralInput_bool_exp\n  ): [CollateralInput]!\n  collateralInputs_aggregate (\n    limit: Int\n    order_by: [CollateralInput_order_by!]\n    offset: Int\n    where: CollateralInput_bool_exp\n  ): CollateralInput_aggregate!\n  collateralOutputs (\n    limit: Int\n    order_by: [CollateralOutput_order_by!]\n    offset: Int\n    where: CollateralOutput_bool_exp\n  ): [CollateralOutput]!\n  collateralOutputs_aggregate (\n    limit: Int\n    order_by: [CollateralOutput_order_by!]\n    offset: Int\n    where: CollateralOutput_bool_exp\n  ): CollateralOutput_aggregate!\n  delegations (\n    limit: Int\n    order_by: [Delegation_order_by!]\n    offset: Int\n    where: Delegation_bool_exp\n  ): [Delegation]\n  delegations_aggregate (\n    limit: Int\n    order_by: [Delegation_order_by!]\n    offset: Int\n    where: Delegation_bool_exp\n  ): Delegation_aggregate\n  epochs (\n    limit: Int\n    order_by: [Epoch_order_by!]\n    offset: Int\n    where: Epoch_bool_exp\n  ): [Epoch]!\n  epochs_aggregate (\n    limit: Int\n    order_by: [Epoch_order_by!]\n    offset: Int\n    where: Epoch_bool_exp\n  ): Epoch_aggregate!\n  genesis: Genesis!\n  paymentAddresses (\n    addresses: [String]!\n  ): [PaymentAddress]\n  redeemers (\n    limit: Int\n    order_by: [Redeemer_order_by!]\n    offset: Int\n    where: Redeemer_bool_exp\n  ): [Redeemer]!\n  redeemers_aggregate (\n    limit: Int\n    order_by: [Redeemer_order_by!]\n    offset: Int\n    where: Redeemer_bool_exp\n  ): Redeemer_aggregate!\n  rewards (\n    limit: Int\n    order_by: [Reward_order_by!]\n    offset: Int\n    where: Reward_bool_exp\n  ): [Reward]!\n  rewards_aggregate (\n    limit: Int\n    order_by: [Reward_order_by!]\n    offset: Int\n    where: Reward_bool_exp\n  ): Reward_aggregate!\n  scripts (\n    limit: Int\n    order_by: [Script_order_by!]\n    offset: Int\n    where: Script_bool_exp\n  ): [Script]!\n  scripts_aggregate (\n    limit: Int\n    order_by: [Script_order_by!]\n    offset: Int\n    where: Script_bool_exp\n  ): Script_aggregate!\n  stakeDeregistrations (\n    limit: Int\n    order_by: [StakeDeregistration_order_by!]\n    offset: Int\n    where: StakeDeregistration_bool_exp\n  ): [StakeDeregistration]\n  stakeDeregistrations_aggregate (\n    limit: Int\n    order_by: [StakeDeregistration_order_by!]\n    offset: Int\n    where: StakeDeregistration_bool_exp\n  ): StakeDeregistration_aggregate\n  stakePools (\n    limit: Int\n    order_by: [StakePool_order_by!]\n    offset: Int\n    where: StakePool_bool_exp\n  ): [StakePool]\n  stakePools_aggregate (\n    limit: Int\n    order_by: [StakePool_order_by!]\n    offset: Int\n    where: StakePool_bool_exp\n  ): StakePool_aggregate\n  stakeRegistrations (\n    limit: Int\n    order_by: [StakeRegistration_order_by!]\n    offset: Int\n    where: StakeRegistration_bool_exp\n  ): [StakeRegistration]\n  stakeRegistrations_aggregate (\n    limit: Int\n    order_by: [StakeRegistration_order_by!]\n    offset: Int\n    where: StakeRegistration_bool_exp\n  ): StakeRegistration_aggregate\n  tokenMints (\n    distinct_on: [TokenMint_aggregate_distinct_on!]\n    limit: Int\n    order_by: [TokenMint_order_by!]\n    offset: Int\n    where: TokenMint_bool_exp\n  ): [TokenMint]!\n  tokenMints_aggregate (\n    distinct_on: [TokenMint_aggregate_distinct_on!]\n    limit: Int\n    order_by: [TokenMint_order_by!]\n    offset: Int\n    where: TokenMint_bool_exp\n  ): TokenMint_aggregate!\n  transactions (\n    limit: Int\n    order_by: [Transaction_order_by!]\n    offset: Int\n    where: Transaction_bool_exp\n  ): [Transaction]!\n  transactions_aggregate (\n    limit: Int\n    order_by: [Transaction_order_by!]\n    offset: Int\n    where: Transaction_bool_exp\n  ): Transaction_aggregate!\n  utxos (\n    distinct_on: [TransactionOutput_distinct_on!]\n    limit: Int\n    order_by: [TransactionOutput_order_by!]\n    offset: Int\n    where: TransactionOutput_bool_exp\n  ): [TransactionOutput]!\n  utxos_aggregate (\n    distinct_on: [TransactionOutput_distinct_on!]\n    limit: Int\n    order_by: [TransactionOutput_order_by!]\n    offset: Int\n    where: TransactionOutput_bool_exp\n  ): TransactionOutput_aggregate!\n  withdrawals (\n    limit: Int\n    order_by: [Withdrawal_order_by!]\n    offset: Int\n    where: Withdrawal_bool_exp\n  ): [Withdrawal]!\n  withdrawals_aggregate (\n    limit: Int\n    order_by: [Withdrawal_order_by!]\n    offset: Int\n    where: Withdrawal_bool_exp\n  ): Withdrawal_aggregate\n}\n\ntype ActiveStake {\n  address: StakeAddress!\n  amount: Lovelace!\n  epoch: Epoch\n  epochNo: Int!\n  stakePoolHash: Hash28Hex!\n  stakePoolId: StakePoolID!\n  registeredWith: StakePool!\n}\n\ninput ActiveStake_bool_exp {\n  _and: [ActiveStake_bool_exp]\n  _not: ActiveStake_bool_exp\n  _or: [ActiveStake_bool_exp]\n  address: StakeAddress_comparison_exp\n  amount: text_comparison_exp\n  epoch: Epoch_bool_exp\n  epochNo: Int_comparison_exp\n  stakePoolHash: Hash28Hex_comparison_exp\n  stakePoolId: StakePoolID_comparison_exp\n  registeredWith: StakePool_bool_exp\n}\n\ninput ActiveStake_order_by {\n  address: order_by\n  amount: order_by\n  epoch: Epoch_order_by\n  epochNo: order_by\n  stakePoolHash: order_by\n  stakePoolId: order_by\n  registeredWith: StakePool_order_by\n}\n\ntype ActiveStake_aggregate {\n  aggregate: ActiveStake_aggregate_fields\n}\n\ntype ActiveStake_aggregate_fields {\n  count: String!\n  max: ActiveStake_max_fields!\n  min: ActiveStake_min_fields!\n  sum: ActiveStake_sum_fields!\n}\n\ntype ActiveStake_max_fields {\n  amount: Lovelace\n}\n\ntype ActiveStake_min_fields {\n  amount: Lovelace\n}\n\ntype ActiveStake_sum_fields {\n  amount: Lovelace\n}\n\ntype Ada {\n  supply: AssetSupply!\n}\n\ntype AdaPots {\n  deposits_stake: Lovelace!\n  deposits_drep: Lovelace!\n  deposits_proposal: Lovelace!\n  fees: Lovelace!\n  reserves: Lovelace!\n  rewards: Lovelace!\n  slotNo: String!\n  treasury: Lovelace!\n  utxo: Lovelace!\n}\n\ntype AlonzoGenesis {\n  lovelacePerUTxOWord: Lovelace!\n  executionPrices: ExecutionPrices!\n  maxTxExUnits: ExecutionUnits!\n  maxBlockExUnits: ExecutionUnits!\n  maxValueSize: Lovelace!\n  collateralPercentage: Int!\n  maxCollateralInputs: Int!\n}\n\ntype ExecutionPrices {\n  prSteps: ExecutionPrice!\n  prMem: ExecutionPrice!\n}\n\ntype ExecutionPrice {\n  numerator: Int!\n  denominator: Int!\n}\n\ntype ExecutionUnits {\n  exUnitsMem: String!\n  exUnitsSteps: String!\n}\n\ntype Asset {\n  assetId: Hex!\n  assetName: Hex\n  decimals: Int\n  description: String\n  fingerprint: AssetFingerprint\n  logo: String\n  metadataHash: String\n  tokenMints (\n    limit: Int\n    order_by: [TokenMint_order_by!]\n    offset: Int\n    where: TokenMint_bool_exp\n  ): [TokenMint]!\n  tokenMints_aggregate (\n    limit: Int\n    order_by: [TokenMint_order_by!]\n    offset: Int\n    where: TokenMint_bool_exp\n  ): TokenMint_aggregate!\n  name: String\n  policyId: Hash28Hex!\n  ticker: String\n  url: String\n}\n\ninput Asset_bool_exp {\n  _and: [Asset_bool_exp]\n  _not: Asset_bool_exp\n  _or: [Asset_bool_exp]\n  ticker: text_comparison_exp\n  assetId: Hex_comparison_exp\n  assetName: Hex_comparison_exp\n  decimals: Int_comparison_exp\n  description: text_comparison_exp\n  fingerprint: AssetFingerprint_comparison_exp\n  logo: text_comparison_exp\n  name: text_comparison_exp\n  policyId: Hash28Hex_comparison_exp\n  tokenMints: TokenMint_bool_exp\n  url: text_comparison_exp\n}\n\ninput Asset_order_by {\n  assetId: order_by\n  decimals: order_by\n  fingerprint: order_by\n  name: order_by\n}\n\ntype Asset_aggregate {\n  aggregate:Asset_aggregate_fields\n}\n\ntype Asset_aggregate_fields {\n  count: String!\n}\n\ntype AssetBalance {\n  asset: Asset!\n  quantity: String!\n}\n\ntype AssetSupply {\n  circulating: String!\n  max: String!\n  total: String\n}\n\ninput AssetSupply_bool_exp {\n  _and: [AssetSupply_bool_exp]\n  _not: AssetSupply_bool_exp\n  _or: [AssetSupply_bool_exp]\n  circulating: text_comparison_exp\n  max: text_comparison_exp\n  total: text_comparison_exp\n}\n\ninput AssetSupply_order_by {\n  circulating: order_by\n  max: order_by\n  total: order_by\n}\n\ntype ByronBlockVersionData {\n  scriptVersion: Int!\n  slotDuration: Int!\n  maxBlockSize: Int!\n  maxHeaderSize: Int!\n  maxTxSize: Int!\n  maxProposalSize: Int!\n  mpcThd: String!\n  heavyDelThd: String!\n  updateVoteThd: String!\n  updateProposalThd: String!\n  updateImplicit: String!\n  softforkRule: ByronSoftForkRule!\n  txFeePolicy: ByronTxFeePolicy!\n  unlockStakeEpoch: String!\n}\n\ntype ByronGenesis {\n  bootStakeholders: JSONObject!\n  heavyDelegation: JSONObject!\n  startTime: Timestamp!\n  nonAvvmBalances: JSONObject!\n  blockVersionData: ByronBlockVersionData!\n  protocolConsts: ByronProtocolConsts!\n  avvmDistr: JSONObject!\n}\n\ntype ByronProtocolConsts {\n  k: Int!\n  protocolMagic: Int\n}\n\ntype ByronSoftForkRule {\n  initThd: String!\n  minThd: String!\n  thdDecrement: String!\n}\n\ntype ByronTxFeePolicy {\n  summand: String!\n  multiplier: String!\n}\n\ntype Cardano {\n  tip: Block!\n  currentEpoch: Epoch!\n}\n\ntype CardanoDbMeta {\n  initialized: Boolean!\n  syncPercentage: Percentage!\n}\n\ntype CollateralInput {\n  address: String!\n  sourceTransaction: Transaction!\n  sourceTxHash: Hash32Hex!\n  sourceTxIndex: Int!\n  tokens: [Token]!\n  tokens_aggregate: Token_aggregate!\n  transaction: Transaction!\n  txHash: Hash32Hex!\n  value: Lovelace!\n}\n\ninput CollateralInput_order_by {\n  address: order_by\n  sourceTxHash: order_by\n  transaction: Transaction_order_by\n  txHash: order_by\n  value: order_by\n}\n\ninput CollateralInput_bool_exp {\n  _and: [CollateralInput_bool_exp]\n  _not: CollateralInput_bool_exp\n  _or: [CollateralInput_bool_exp]\n  address: text_comparison_exp\n  sourceTransaction: Transaction_bool_exp\n  tokens: Token_bool_exp\n  transaction: Transaction_bool_exp\n  value: text_comparison_exp\n}\n\ntype CollateralInput_aggregate {\n  aggregate: TransactionInput_aggregate_fields\n}\n\ntype CollateralInput_aggregate_fields {\n  count: String!\n  max: CollateralInput_max_fields!\n  min: CollateralInput_min_fields!\n  sum: CollateralInput_sum_fields!\n}\n\ntype CollateralInput_max_fields {\n  tokens: Token_max_fields\n  value: Lovelace\n}\n\ntype CollateralInput_min_fields {\n  tokens: Token_min_fields\n  value: Lovelace\n}\n\ntype CollateralInput_sum_fields {\n  tokens: Token_sum_fields\n  value: Lovelace\n}\n\ntype CollateralOutput {\n  address: String!\n  addressHasScript: Boolean!\n  datum: Datum\n  index: Int!\n  paymentCredential: Hash28Hex\n  script: Script\n  transaction: Transaction!\n  txHash: Hash32Hex!\n  value: Lovelace!\n}\n\nenum CollateralOutput_distinct_on {\n  address\n}\n\ninput CollateralOutput_order_by {\n  address: order_by\n  addressHasScript: order_by\n  datum: Transaction_order_by\n  index: order_by\n  txHash: order_by\n  value: order_by\n}\n\ninput CollateralOutput_bool_exp {\n  _and: [CollateralOutput_bool_exp]\n  _not: CollateralOutput_bool_exp\n  _or: [CollateralOutput_bool_exp]\n  address: text_comparison_exp\n  addressHasScript: Boolean_comparison_exp\n  datum: Datum_bool_exp\n  index: Int_comparison_exp\n  script: Script_bool_exp\n  transaction: Transaction_bool_exp\n  value: text_comparison_exp\n}\n\ntype CollateralOutput_aggregate {\n  aggregate: CollateralOutput_aggregate_fields\n}\n\ntype CollateralOutput_aggregate_fields {\n  count: String!\n  max: CollateralOutput_max_fields!\n  min: CollateralOutput_min_fields!\n  sum: CollateralOutput_sum_fields!\n}\n\ntype CollateralOutput_max_fields {\n  value: Lovelace\n}\n\ntype CollateralOutput_min_fields {\n  value: Lovelace\n}\n\ntype CollateralOutput_sum_fields {\n  value: Lovelace\n}\n\ntype Datum {\n  bytes: Hex!\n  hash: Hash32Hex!\n  firstIncludedIn: Transaction!\n  value: JSONObject!\n}\n\ninput Datum_bool_exp {\n  firstIncludedIn: Transaction_bool_exp\n  hash: Hex_comparison_exp\n}\n\ntype Delegation {\n  address: StakeAddress!\n  redeemer: Redeemer\n  stakePool: StakePool!\n  stakePoolHash: Hash28Hex!\n  stakePoolId: StakePoolID!\n  transaction: Transaction\n}\n\ninput Delegation_order_by {\n  address: order_by\n  stakePool: StakePool_order_by\n  stakePoolHash: order_by\n  stakePoolId: order_by\n  transaction: Transaction_order_by\n}\n\ninput Delegation_bool_exp {\n  _and: [Delegation_bool_exp]\n  _not: Delegation_bool_exp\n  _or: [Delegation_bool_exp]\n  address: StakeAddress_comparison_exp\n  stakePool: StakePool_bool_exp\n  stakePoolHash: Hash28Hex_comparison_exp\n  stakePoolId: StakePoolID_comparison_exp\n  transaction: Transaction_bool_exp\n}\n\ntype Delegation_aggregate {\n  aggregate: Delegation_aggregate_fields\n}\n\ntype Delegation_aggregate_fields {\n  count: String\n}\n\ntype Genesis {\n  alonzo: AlonzoGenesis\n  byron: ByronGenesis\n  shelley: ShelleyGenesis\n}\n\ntype PaymentAddress {\n  address: String!\n  summary(\n    atBlock: Int\n  ): PaymentAddressSummary\n}\n\ntype PaymentAddressSummary {\n  assetBalances: [AssetBalance]!\n  utxosCount: Int!\n}\n\ntype Redeemer {\n  datum: Datum\n  fee: Lovelace\n  index: Int!\n  purpose: String! # Todo: Make scalar\n  scriptHash: Hash28Hex!\n  transaction: Transaction!\n  unitMem: String!\n  unitSteps: String!\n}\n\ntype Redeemer_aggregate {\n  aggregate: Redeemer_aggregate_fields\n}\n\ntype Redeemer_aggregate_fields {\n  count: String!\n  max: Redeemer_max_fields!\n  min: Redeemer_min_fields!\n  sum: Redeemer_sum_fields!\n}\n\ntype Redeemer_max_fields {\n  fee: String\n  unitMem: String\n  unitSteps: String\n}\n\ntype Redeemer_min_fields {\n  fee: String\n  unitMem: String\n  unitSteps: String\n}\n\ntype Redeemer_sum_fields {\n  fee: String\n  unitMem: String\n  unitSteps: String\n}\n\ninput Redeemer_bool_exp {\n  _and: [Redeemer_bool_exp]\n  _not: Redeemer_bool_exp\n  _or: [Redeemer_bool_exp]\n  datum: Datum_bool_exp\n  fee: text_comparison_exp\n  index: Int_comparison_exp\n  purpose: text_comparison_exp\n  scriptHash: text_comparison_exp\n  transaction: Transaction_bool_exp\n  unitMem: text_comparison_exp\n  unitSteps: text_comparison_exp\n}\n\ninput Redeemer_order_by {\n  purpose: order_by\n  scriptHash: order_by\n  transaction: Transaction_order_by\n  unitMem: order_by\n  unitSteps: order_by\n}\n\ntype Relay {\n  ipv4: IPv4\n  ipv6: IPv6\n  dnsName: String\n  dnsSrvName: String\n  port: Int\n}\n\ninput Relay_bool_exp {\n  _and: [Relay_bool_exp]\n  _not: Relay_bool_exp\n  _or: [Relay_bool_exp]\n  ipv4: text_comparison_exp\n  ipv6: text_comparison_exp\n  dnsName: text_comparison_exp\n  dnsSrvName: text_comparison_exp\n  port: Int_comparison_exp\n}\n\ntype Reward {\n  address: StakeAddress!\n  amount: Lovelace!\n  earnedIn: Epoch!\n  receivedIn: Epoch\n  stakePool: StakePool\n  type: String!\n}\n\ntype Reward_aggregate {\n  aggregate: Reward_aggregate_fields\n}\n\ntype Reward_aggregate_fields {\n  count: String!\n  max: Reward_max_fields!\n  min: Reward_min_fields!\n  sum: Reward_sum_fields!\n}\n\ntype Reward_max_fields {\n  amount: Lovelace\n}\n\ntype Reward_min_fields {\n  amount: Lovelace\n}\n\ntype Reward_sum_fields {\n  amount: Lovelace\n}\n\ninput Reward_bool_exp {\n  _and: [Reward_bool_exp]\n  _not: Reward_bool_exp\n  _or: [Reward_bool_exp]\n  address: StakeAddress_comparison_exp\n  amount: text_comparison_exp\n  earnedIn: Epoch_bool_exp\n  receivedIn: Epoch_bool_exp\n  stakePool: StakePool_bool_exp\n  type: text_comparison_exp\n}\n\ninput Reward_order_by {\n  address: order_by\n  amount: order_by\n  earnedIn: Epoch_order_by\n  receivedIn: Epoch_order_by\n  stakePool: StakePool_order_by\n  type: order_by\n}\n\ntype Script {\n  hash: Hash28Hex!\n  serialisedSize: Int\n  transaction: Transaction!\n  type: String! # Todo: Make scalar\n}\n\ntype Script_aggregate {\n  aggregate: Script_aggregate_fields\n}\n\ntype Script_aggregate_fields {\n  count: String!\n  max: Script_max_fields!\n  min: Script_min_fields!\n  sum: Script_sum_fields!\n}\n\ntype Script_max_fields {\n  serialisedSize: Int\n}\n\ntype Script_min_fields {\n  serialisedSize: Int\n}\n\ntype Script_sum_fields {\n  serialisedSize: BigInt\n}\n\ninput Script_bool_exp {\n  _and: [Script_bool_exp]\n  _not: Script_bool_exp\n  _or: [Script_bool_exp]\n  serialisedSize: Int_comparison_exp\n  transaction: Transaction_bool_exp\n  type: text_comparison_exp\n}\n\ninput Script_order_by {\n  serialisedSize: order_by\n  transaction: Transaction_order_by\n  type: order_by\n}\n\ntype ShelleyGenesis {\n  activeSlotsCoeff: Float!\n  epochLength: Int!\n  genDelegs: JSONObject\n  initialFunds: JSONObject!\n  maxKESEvolutions: Int!\n  maxLovelaceSupply: Lovelace!\n  networkId: String!\n  networkMagic: Int!\n  protocolParams: ShelleyProtocolParams!\n  securityParam: Int!\n  slotLength: Int!\n  slotsPerKESPeriod: Int!\n  staking: ShelleyGenesisStaking\n  systemStart: String!\n  updateQuorum: Int!\n}\n\ntype ShelleyGenesisStaking {\n  pools: JSONObject!\n  stake: JSONObject!\n}\n\ntype ProtocolParams {\n  a0: Float!\n  coinsPerUtxoByte: Lovelace\n  collateralPercent: Int\n  costModels: JSONObject\n  decentralisationParam: Float!\n  eMax: Int!\n  extraEntropy: JSONObject\n  keyDeposit: Lovelace!\n  maxBlockBodySize: Int!\n  maxBlockExMem: String\n  maxBlockExSteps: String\n  maxBlockHeaderSize: Int!\n  maxCollateralInputs: Int\n  maxTxExMem: String\n  maxTxExSteps: String\n  maxTxSize: Int!\n  maxValSize: String\n  minFeeA: Int!\n  minFeeB: Int!\n  minPoolCost: Lovelace!\n  minUTxOValue: Lovelace!\n  nOpt: Int!\n  poolDeposit: Lovelace!\n  priceMem: Float\n  priceStep: Float\n  protocolVersion: JSONObject!\n  rho: Float!\n  tau: Float!\n}\n\ntype ShelleyProtocolParams {\n  a0: Float!\n  decentralisationParam: Float!\n  eMax: Int!\n  extraEntropy: JSONObject\n  keyDeposit: Lovelace!\n  maxBlockBodySize: Int!\n  maxBlockHeaderSize: Int!\n  maxTxSize: Int!\n  minFeeA: Int!\n  minFeeB: Int!\n  minPoolCost: Lovelace!\n  minUTxOValue: Lovelace!\n  nOpt: Int!\n  poolDeposit: Lovelace!\n  protocolVersion: JSONObject!\n  rho: Float!\n  tau: Float!\n}\n\ninput StakeAddress_comparison_exp {\n  _eq: StakeAddress\n  _in: [StakeAddress]\n  _neq: StakeAddress\n  _nin: [StakeAddress]\n}\n\ntype StakeDeregistration {\n  address: StakeAddress!\n  redeemer: Redeemer\n  transaction: Transaction!\n}\n\ntype StakeDeregistration_aggregate {\n  aggregate: StakeDeregistration_aggregate_fields\n}\n\ntype StakeDeregistration_aggregate_fields {\n  count: String\n}\n\ninput StakeDeregistration_order_by {\n  address: order_by\n  transaction: Transaction_order_by\n}\n\ninput StakeDeregistration_bool_exp {\n  _and: [StakeDeregistration_bool_exp]\n  _not: StakeDeregistration_bool_exp\n  _or: [StakeDeregistration_bool_exp]\n  address: StakeAddress_comparison_exp\n  transaction: Transaction_bool_exp\n}\n\ntype SlotLeader {\n  description: String!\n  hash: Hash28Hex!\n  stakePool: StakePool\n}\n\ninput SlotLeader_bool_exp {\n  _and: [SlotLeader_bool_exp]\n  _not: SlotLeader_bool_exp\n  _or: [SlotLeader_bool_exp]\n  description: text_comparison_exp\n  hash: Hash28Hex_comparison_exp\n  stakePool: StakePool_bool_exp\n}\n\ninput SlotLeader_order_by {\n  hash: order_by\n  stakePool: StakePool_order_by\n}\n\ntype StakePool {\n  activeStake (\n    limit: Int\n    order_by: [ActiveStake_order_by!]\n    offset: Int\n    where: ActiveStake_bool_exp\n  ): [ActiveStake]!\n  activeStake_aggregate (\n    limit: Int\n    order_by: [ActiveStake_order_by!]\n    offset: Int\n    where: ActiveStake_bool_exp\n  ): ActiveStake_aggregate!\n  blocks (\n    limit: Int\n    order_by: [Block_order_by!]\n    offset: Int\n    where: Block_bool_exp\n  ): [Block!]!\n  blocks_aggregate (\n    limit: Int\n    order_by: [Block_order_by!]\n    offset: Int\n    where: Block_bool_exp\n  ): Block_aggregate!\n  delegators (\n    limit: Int\n    order_by: [Delegation_order_by!]\n    offset: Int\n    where: Delegation_bool_exp\n  ): [Delegation]!\n  delegators_aggregate (\n    limit: Int\n    order_by: [Delegation_order_by!]\n    offset: Int\n    where: Delegation_bool_exp\n  ): Delegation_aggregate!\n  fixedCost: Lovelace!\n  hash: Hash28Hex!\n  id: StakePoolID!\n  margin: Float!\n  metadataHash: Hash32Hex\n  owners: [StakePoolOwner!]!\n  pledge: Lovelace!\n  relays: [Relay]\n  retirements: [StakePoolRetirement]\n  rewardAddress: StakeAddress!\n  rewards: [Reward]!\n  rewards_aggregate (\n    limit: Int\n    order_by: [Reward_order_by!]\n    offset: Int\n    where: Reward_bool_exp\n  ): Reward_aggregate!\n  updatedIn: Transaction!\n  url: String\n}\n\n\ninput StakePool_order_by {\n  fixedCost: order_by\n  hash: order_by\n  id: order_by\n  margin: order_by\n  pledge: order_by\n  updatedIn: Transaction_order_by\n  url: order_by\n}\n\ninput StakePool_bool_exp {\n  _and: [StakePool_bool_exp]\n  _not: StakePool_bool_exp\n  _or: [StakePool_bool_exp]\n  hash: Hash28Hex_comparison_exp\n  id: StakePoolID_comparison_exp\n  margin: Float_comparison_exp\n  metadataHash: Hash32Hex_comparison_exp\n  owners: StakePoolOwner_bool_exp\n  pledge: text_comparison_exp\n  registrationTransaction: Transaction_bool_exp\n  relays: Relay_bool_exp\n  retirements: StakePoolRetirement_bool_exp\n  rewardAddress: text_comparison_exp\n  rewards: Reward_bool_exp\n  url: text_comparison_exp\n}\n\ntype StakePool_aggregate {\n  aggregate: StakePool_aggregate_fields\n}\n\ntype StakePool_aggregate_fields {\n  count: String!\n  max: StakePool_max_fields!\n  min: StakePool_min_fields!\n  sum: StakePool_sum_fields!\n}\n\ntype StakePool_max_fields {\n  fixedCost: Lovelace\n  margin: Float\n  pledge: Lovelace\n}\n\ntype StakePool_min_fields {\n  fixedCost: Lovelace\n  margin: Float\n  pledge: Lovelace\n}\n\ntype StakePool_sum_fields {\n  fixedCost: Lovelace\n  margin: Float\n  pledge: Lovelace\n}\n\ninput StakePoolID_comparison_exp {\n  _eq: StakePoolID\n  _in: [StakePoolID]\n  _neq: StakePoolID\n  _nin: [StakePoolID]\n}\n\ninput StakePoolOwner_bool_exp {\n  _and: [StakePoolOwner_bool_exp]\n  _not: StakePoolOwner_bool_exp\n  _or: [StakePoolOwner_bool_exp]\n  hash: Hash28Hex_comparison_exp\n}\n\ntype StakePoolRetirement {\n  announcedIn: Transaction\n  inEffectFrom: Int!\n  retiredInEpoch: Epoch\n}\n\ninput StakePoolRetirement_bool_exp {\n  _and: [StakePoolRetirement_bool_exp]\n  _not: StakePoolRetirement_bool_exp\n  _or: [StakePoolRetirement_bool_exp]\n  announcedIn: Transaction_bool_exp\n  inEffectFrom: Int_comparison_exp\n}\n\ntype StakePoolOwner {\n  hash: Hash28Hex!\n}\n\n\ntype StakeRegistration {\n  address: StakeAddress!\n  transaction: Transaction!\n}\n\ninput StakeRegistration_order_by {\n  address: order_by\n  transaction: Transaction_order_by\n}\n\ninput StakeRegistration_bool_exp {\n  _and: [StakeRegistration_bool_exp]\n  _not: StakeRegistration_bool_exp\n  _or: [StakeRegistration_bool_exp]\n  address: StakeAddress_comparison_exp\n  transaction: Transaction_bool_exp\n}\n\ntype StakeRegistration_aggregate {\n  aggregate: StakeRegistration_aggregate_fields\n}\n\ntype StakeRegistration_aggregate_fields {\n  count: String\n}\n\ntype Token {\n  asset: Asset!\n  quantity: String!\n  transactionOutput: TransactionOutput!\n}\n\ninput Token_order_by {\n  asset: Asset_order_by\n  quantity: order_by\n}\n\ninput Token_bool_exp {\n  _and: [Token_bool_exp]\n  _not: Token_bool_exp\n  _or: [Token_bool_exp]\n  asset: Asset_bool_exp\n  quantity: text_comparison_exp\n  transactionOutput: TransactionOutput_bool_exp\n}\n\ntype Token_aggregate {\n  aggregate: Token_aggregate_fields\n  nodes: [Token!]!\n}\n\ntype Token_aggregate_fields {\n  count: String!\n  max: Token_max_fields!\n  min: Token_min_fields!\n  sum: Token_sum_fields!\n}\n\ntype Token_max_fields {\n  quantity: String\n}\n\ntype Token_min_fields {\n  quantity: String\n}\n\ntype Token_sum_fields {\n  quantity: String\n}\n\ntype TokenMint {\n  asset: Asset!\n  quantity: String!\n  transaction: Transaction!\n}\n\ninput TokenMint_order_by {\n  asset: Asset_order_by\n  quantity: order_by\n  transaction: Transaction_order_by\n}\n\ninput TokenMint_bool_exp {\n  _and: [TokenMint_bool_exp]\n  _not: TokenMint_bool_exp\n  _or: [TokenMint_bool_exp]\n  asset: Asset_bool_exp\n  quantity: text_comparison_exp\n  transaction: Transaction_bool_exp\n}\n\ntype TokenMint_aggregate {\n  aggregate: TokenMint_aggregate_fields\n  nodes: [TokenMint!]!\n}\n\nenum TokenMint_aggregate_distinct_on {\n  assetId\n  policyId\n}\n\ntype TokenMint_aggregate_fields {\n  count: String!\n  max: TokenMint_max_fields!\n  min: TokenMint_min_fields!\n  sum: TokenMint_sum_fields!\n}\n\ntype TokenMint_max_fields {\n  quantity: String\n}\n\ntype TokenMint_min_fields {\n  quantity: String\n}\n\ntype TokenMint_sum_fields {\n  quantity: String\n}\n\ntype Transaction {\n  block: Block\n  blockIndex: Int!\n  collateralInputs(\n    limit: Int\n    order_by: [CollateralInput_order_by]\n    offset: Int\n    where: CollateralInput_bool_exp\n  ): [CollateralInput]\n  collateralInputs_aggregate (\n    limit: Int\n    order_by: [CollateralInput_order_by]\n    offset: Int\n    where: CollateralInput_bool_exp\n  ): CollateralInput_aggregate!\n  collateralOutputs(\n    limit: Int\n    order_by: [CollateralOutput_order_by]\n    offset: Int\n    where: CollateralOutput_bool_exp\n  ): [CollateralOutput]\n  collateralOutputs_aggregate (\n    limit: Int\n    order_by: [CollateralOutput_order_by]\n    offset: Int\n    where: CollateralOutput_bool_exp\n  ): CollateralOutput_aggregate!\n  deposit: Lovelace!\n  fee: Lovelace!\n  hash: Hash32Hex!\n  inputs (\n    limit: Int\n    order_by: [TransactionInput_order_by]\n    offset: Int\n    where: TransactionInput_bool_exp\n  ): [TransactionInput!]!\n  inputs_aggregate (\n    limit: Int\n    order_by: [TransactionInput_order_by]\n    offset: Int\n    where: TransactionInput_bool_exp\n  ): TransactionInput_aggregate!\n  invalidBefore: String\n  invalidHereafter: String\n  metadata: [TransactionMetadata]\n  mint(\n    limit: Int\n    order_by: [Token_order_by]\n    offset: Int\n    where: Token_bool_exp\n  ): [Token!]!\n  mint_aggregate(\n    limit: Int\n    order_by: [Token_order_by]\n    offset: Int\n    where: Token_bool_exp\n  ): Token_aggregate!\n  outputs (\n    limit: Int\n    order_by: [TransactionOutput_order_by]\n    offset: Int\n    where: TransactionOutput_bool_exp\n  ): [TransactionOutput]!\n  outputs_aggregate(\n    limit: Int\n    order_by: [TransactionOutput_order_by]\n    offset: Int\n    where: TransactionOutput_bool_exp\n  ): TransactionOutput_aggregate!\n  redeemers: [Redeemer]\n  referenceInputs (\n    limit: Int\n    order_by: [TransactionInput_order_by]\n    offset: Int\n    where: TransactionInput_bool_exp\n  ): [TransactionInput!]!\n  referenceInputs_aggregate (\n    limit: Int\n    order_by: [TransactionInput_order_by]\n    offset: Int\n    where: TransactionInput_bool_exp\n  ): TransactionInput_aggregate!\n  scripts: [Script]\n  scriptSize: Int!\n  size: Int!\n  totalOutput: Lovelace!\n  includedAt: DateTime!\n  # True unless a contract is invalid\n  validContract: Boolean!\n  withdrawals: [Withdrawal]!\n  withdrawals_aggregate(\n    limit: Int\n    order_by: [Withdrawal_order_by]\n    offset: Int\n    where: Withdrawal_bool_exp\n  ): Withdrawal_aggregate!\n}\n\ninput Transaction_order_by {\n  block: Block_order_by\n  blockIndex: order_by\n  deposit: order_by\n  fee: order_by\n  hash: order_by\n  includedAt: order_by\n  invalidBefore: order_by_with_nulls\n  invalidHereafter: order_by_with_nulls\n  scriptSize: order_by_with_nulls\n  size: order_by\n  totalOutput: order_by\n  validContract: order_by\n  withdrawals: order_by\n}\n\ninput Transaction_bool_exp {\n  _and: [Transaction_bool_exp]\n  _not: Transaction_bool_exp\n  _or: [Transaction_bool_exp]\n  block: Block_bool_exp\n  blockIndex: Int_comparison_exp\n  collateral: TransactionInput_bool_exp\n  deposit: text_comparison_exp\n  fee: text_comparison_exp\n  hash: Hash32Hex_comparison_exp\n  includedAt: Date_comparison_exp\n  inputs: TransactionInput_bool_exp\n  invalidBefore: text_comparison_exp\n  invalidHereafter: text_comparison_exp\n  metadata: TransactionMetadata_bool_exp\n  mint: Token_bool_exp\n  outputs: TransactionOutput_bool_exp\n  scriptSize: Int_comparison_exp\n  size: Int_comparison_exp\n  totalOutput: text_comparison_exp\n  validContract: Boolean_comparison_exp\n  withdrawals: Withdrawal_bool_exp\n}\n\ntype Transaction_aggregate {\n  aggregate: Transaction_aggregate_fields\n}\n\ntype Transaction_aggregate_fields {\n  count: String!\n  max: Transaction_max_fields!\n  min: Transaction_min_fields!\n  sum: Transaction_sum_fields!\n}\n\ntype Transaction_max_fields {\n  deposit: Lovelace\n  fee: Lovelace\n  invalidBefore: String\n  invalidHereafter: String\n  mint: Token_max_fields\n  scriptSize: Int\n  size: Int\n  totalOutput: Lovelace\n  withdrawals: Withdrawal_max_fields\n}\n\ntype Transaction_min_fields {\n  deposit: Lovelace\n  fee: Lovelace\n  invalidBefore: String\n  invalidHereafter: String\n  mint: Token_min_fields\n  scriptSize: Int\n  size: Int\n  totalOutput: Lovelace\n  withdrawals: Withdrawal_min_fields\n}\n\ntype Transaction_sum_fields {\n  deposit: Lovelace\n  fee: Lovelace\n  mint: Token_sum_fields\n  scriptSize: BigInt\n  size: BigInt\n  totalOutput: Lovelace\n  withdrawals: Withdrawal_sum_fields\n}\n\ntype TransactionInput {\n  address: String!\n  redeemer: Redeemer\n  sourceTransaction: Transaction!\n  sourceTxHash: Hash32Hex!\n  sourceTxIndex: Int!\n  tokens: [Token]!\n  tokens_aggregate: Token_aggregate!\n  transaction: Transaction!\n  txHash: Hash32Hex!\n  value: Lovelace!\n}\n\ninput TransactionInput_order_by {\n  address: order_by\n  sourceTxHash: order_by\n  transaction: Transaction_order_by\n  txHash: order_by\n  value: order_by\n}\n\ninput TransactionInput_bool_exp {\n  _and: [TransactionInput_bool_exp]\n  _not: TransactionInput_bool_exp\n  _or: [TransactionInput_bool_exp]\n  address: text_comparison_exp\n  sourceTransaction: Transaction_bool_exp\n  tokens: Token_bool_exp\n  transaction: Transaction_bool_exp\n  value: text_comparison_exp\n}\n\ntype TransactionInput_aggregate {\n  aggregate: TransactionInput_aggregate_fields\n}\n\ntype TransactionInput_aggregate_fields {\n  count: String!\n  max: TransactionInput_max_fields!\n  min: TransactionInput_min_fields!\n  sum: TransactionInput_sum_fields!\n}\n\ntype TransactionInput_max_fields {\n  tokens: Token_max_fields\n  value: Lovelace\n}\n\ntype TransactionInput_min_fields {\n  tokens: Token_min_fields\n  value: Lovelace\n}\n\ntype TransactionInput_sum_fields {\n  tokens: Token_sum_fields\n  value: Lovelace\n}\n\ntype TransactionMetadata {\n  key: String!\n  value: JSON!\n}\n\ninput TransactionMetadata_bool_exp {\n  key: text_comparison_exp\n}\n\ntype TransactionOutput {\n  address: String!\n  addressHasScript: Boolean!\n  datum: Datum\n  index: Int!\n  paymentCredential: Hash28Hex\n  script: Script\n  transaction: Transaction!\n  txHash: Hash32Hex!\n  tokens: [Token!]!\n  tokens_aggregate: Token_aggregate!\n  value: Lovelace!\n}\n\nenum TransactionOutput_distinct_on {\n  address\n}\n\ninput TransactionOutput_order_by {\n  address: order_by\n  addressHasScript: order_by\n  datum: Transaction_order_by\n  index: order_by\n  txHash: order_by\n  value: order_by\n}\n\ninput TransactionOutput_bool_exp {\n  _and: [TransactionOutput_bool_exp]\n  _not: TransactionOutput_bool_exp\n  _or: [TransactionOutput_bool_exp]\n  address: text_comparison_exp\n  addressHasScript: Boolean_comparison_exp\n  datum: Datum_bool_exp\n  index: Int_comparison_exp\n  script: Script_bool_exp\n  tokens: Token_bool_exp\n  transaction: Transaction_bool_exp\n  value: text_comparison_exp\n}\n\ntype TransactionOutput_aggregate {\n  aggregate: TransactionOutput_aggregate_fields\n}\n\ntype TransactionOutput_aggregate_fields {\n  count: String!\n  max: TransactionOutput_max_fields!\n  min: TransactionOutput_min_fields!\n  sum: TransactionOutput_sum_fields!\n}\n\ntype TransactionOutput_max_fields {\n  tokens: Token_max_fields\n  value: Lovelace\n}\n\ntype TransactionOutput_min_fields {\n  tokens: Token_min_fields\n  value: Lovelace\n}\n\ntype TransactionOutput_sum_fields {\n  tokens: Token_sum_fields\n  value: Lovelace\n}\n\ntype TransactionSubmitResponse {\n  hash: String!\n}\n\ntype Block {\n  # Genesis block does not belong to the 0th epoch, therefore it could be null\n  epoch: Epoch\n  epochNo: Int\n  fees: Lovelace!\n  forgedAt: DateTime!\n  slotLeader: SlotLeader!\n  hash: Hash32Hex!\n  number: Int\n  opCert: Hash32Hex\n  slotInEpoch: String\n  # Ouroboros Classic Epoch Boundary blocks (EBB) do not have a slot number\n  slotNo: String\n  # Ouroboros Classic Epoch Boundary blocks (EBB) do not have a slot number\n  previousBlock: Block\n  protocolVersion: JSONObject\n  nextBlock: Block\n  size: Int!\n  transactions(\n    limit: Int\n    order_by: [Transaction_order_by!]\n    offset: Int\n    where: Transaction_bool_exp\n  ): [Transaction]!\n  transactions_aggregate (\n    limit: Int\n    order_by: [Transaction_order_by!]\n    offset: Int\n    where: Transaction_bool_exp\n  ): Transaction_aggregate!\n  transactionsCount: String!\n  vrfKey: VRFVerificationKey\n}\n\ninput Block_bool_exp {\n  _and: [Block_bool_exp]\n  _not: Block_bool_exp\n  _or: [Block_bool_exp]\n  forgedAt: Date_comparison_exp\n  slotLeader: SlotLeader_bool_exp\n  epoch: Epoch_bool_exp\n  fees: text_comparison_exp\n  hash: Hash32Hex_comparison_exp\n  number: Int_comparison_exp\n  previousBlock: Block_bool_exp\n  nextBlock: Block_bool_exp\n  size: Int_comparison_exp\n  slotInEpoch: Int_comparison_exp\n  slotNo: text_comparison_exp\n  transactions: Transaction_bool_exp\n  transactionsCount: text_comparison_exp\n  vrfKey: VRFVerificationKey_comparison_exp\n}\n\ninput Block_order_by {\n  forgedAt: order_by\n  slotLeader: SlotLeader_order_by\n  epoch: Epoch_order_by\n  fees: order_by\n  hash: order_by\n  number: order_by_with_nulls\n  size: order_by\n  slotNo: order_by_with_nulls\n  transactionsCount: order_by\n  vrfKey: order_by_with_nulls\n}\n\ntype Block_aggregate {\n  aggregate: Block_aggregate_fields\n}\n\ntype Block_aggregate_fields {\n  count: String!\n  max: Block_max_fields!\n  min: Block_min_fields!\n  sum: Block_sum_fields!\n}\n\ntype Block_max_fields {\n  fees: Lovelace\n  size: Int\n}\n\ntype Block_min_fields {\n  fees: Lovelace\n  size: Int\n}\n\ntype Block_sum_fields {\n  fees: Lovelace\n  size: BigInt\n}\n\ntype Epoch {\n  activeStake: [ActiveStake]\n  activeStake_aggregate: ActiveStake_aggregate\n  adaPots: AdaPots\n  blocks (\n    limit: Int\n    order_by: [Block_order_by!]\n    offset: Int\n    where: Block_bool_exp\n  ): [Block!]!\n  blocks_aggregate (\n    limit: Int\n    order_by: [Block_order_by!]\n    offset: Int\n    where: Block_bool_exp\n  ): Block_aggregate!\n  blocksCount: String!\n  fees: Lovelace!\n  output: Lovelace!\n  nonce: Hash32Hex\n  number: Int!\n  protocolParams: ProtocolParams\n  transactionsCount: String!\n  startedAt: DateTime!\n  lastBlockTime: DateTime!\n}\n\ninput Epoch_bool_exp {\n  _and: [Epoch_bool_exp]\n  _not: Epoch_bool_exp\n  _or: [Epoch_bool_exp]\n  blocks: Block_bool_exp\n  blocksCount: text_comparison_exp\n  fees: text_comparison_exp\n  number: Int_comparison_exp\n  output: text_comparison_exp\n  startedAt: Date_comparison_exp\n  transactionsCount: text_comparison_exp\n}\n\ninput Epoch_order_by {\n  blocksCount: order_by\n  fees: order_by\n  number: order_by\n  output: order_by\n  transactionsCount: order_by\n}\n\ntype Epoch_aggregate {\n  aggregate: Epoch_aggregate_fields!\n}\n\ntype Epoch_aggregate_fields {\n  count: String!\n  max: Epoch_max_fields!\n  min: Epoch_min_fields!\n  sum: Epoch_sum_fields!\n}\n\ntype Epoch_max_fields {\n  blocksCount: Int!\n  fees: Lovelace!\n  number: Int!\n  output: Lovelace!\n  transactionsCount: String!\n}\n\ntype Epoch_min_fields {\n  blocksCount: String!\n  fees: Lovelace!\n  output: Lovelace!\n  transactionsCount: String!\n}\n\ntype Epoch_sum_fields {\n  blocksCount: String!\n  fees: Lovelace!\n  output: Lovelace!\n  transactionsCount: String!\n}\n\ntype Withdrawal {\n  address: StakeAddress!\n  amount: Lovelace!\n  redeemer: Redeemer\n  transaction: Transaction!\n}\n\ninput Withdrawal_bool_exp {\n  _and: [Withdrawal_bool_exp]\n  _not: Withdrawal_bool_exp\n  _or: [Withdrawal_bool_exp]\n  address: StakeAddress_comparison_exp\n  amount: text_comparison_exp\n  transaction: Transaction_bool_exp\n}\n\ninput Withdrawal_order_by {\n  address: order_by\n  amount: order_by\n  transaction: Transaction_order_by\n}\n\ntype Withdrawal_aggregate {\n  aggregate: Withdrawal_aggregate_fields!\n}\n\ntype Withdrawal_aggregate_fields {\n  count: String!\n  max: Withdrawal_max_fields!\n  min: Withdrawal_min_fields!\n  sum: Withdrawal_sum_fields!\n}\n\ntype Withdrawal_max_fields {\n  amount: Lovelace\n}\n\ntype Withdrawal_min_fields {\n  amount: Lovelace\n}\n\ntype Withdrawal_sum_fields {\n  amount: Lovelace\n}\n\ninput Boolean_comparison_exp {\n  _eq: Boolean\n  _gt: Boolean\n  _gte: Boolean\n  _in: [Boolean!]\n  _is_null: Boolean\n  _lt: Boolean\n  _lte: Boolean\n  _neq: Boolean\n  _nin: [Boolean!]\n}\n\n# expression to compare data of type date. All fields are combined with logical 'AND'.\ninput Date_comparison_exp {\n  _eq: DateTime\n  _gt: DateTime\n  _gte: DateTime\n  _in: [DateTime]\n  _lt: DateTime\n  _lte: DateTime\n  _neq: DateTime\n  _nin: [DateTime]\n}\n\n# expression to compare data of type Float. All fields are combined with logical 'AND'.\ninput Float_comparison_exp {\n  _eq: Float\n  _gt: Float\n  _gte: Float\n  _in: [Float!]\n  _is_null: Boolean\n  _lt: Float\n  _lte: Float\n  _neq: Float\n  _nin: [Float!]\n}\n\n# expression to compare data of type Int. All fields are combined with logical 'AND'.\ninput Int_comparison_exp {\n  _eq: Int\n  _gt: Int\n  _gte: Int\n  _in: [Int!]\n  _is_null: Boolean\n  _lt: Int\n  _lte: Int\n  _neq: Int\n  _nin: [Int!]\n}\n\n# All fields are combined with logical 'AND'.\ninput Hex_comparison_exp {\n  _eq: Hex\n  _in: [Hex]\n  _neq: Hex\n  _nin: [Hex]\n}\n\n# expression to compare data of type Percentage. All fields are combined with logical 'AND'.\ninput Percentage_comparison_exp {\n  _eq: Percentage\n  _gt: Percentage\n  _gte: Percentage\n  _lt: Percentage\n  _lte: Percentage\n  _neq: Percentage\n}\n\n# All fields are combined with logical 'AND'.\ninput Hash28Hex_comparison_exp {\n  _eq: Hash28Hex\n  _in: [Hash28Hex]\n  _neq: Hash28Hex\n  _nin: [Hash28Hex]\n}\n\ninput Hash32Hex_comparison_exp {\n  _eq: Hash32Hex\n  _in: [Hash32Hex]\n  _neq: Hash32Hex\n  _nin: [Hash32Hex]\n}\n\ninput text_comparison_exp {\n  _eq: String\n  _gt: String\n  _gte: String\n  _ilike: String\n  _in: [String]\n  _is_null: Boolean\n  _like: String\n  _lt: String\n  _lte: String\n  _neq: String\n  _nilike: String\n  _nin: [String]\n  _nlike: String\n  _nsimilar: String\n  _similar: String\n}\n\ninput AssetFingerprint_comparison_exp {\n  _eq: String\n  _in: [String]\n  _neq: String\n  _nin: [String]\n}\n\n# ordering options\nenum order_by {\n  # in the ascending order, nulls last\n  asc\n  # in the ascending order, nulls first\n  desc\n}\n\n# ordering options\nenum order_by_with_nulls {\n  # in the ascending order, nulls last\n  asc\n  # in the ascending order, nulls first\n  asc_nulls_first\n  # in the ascending order, nulls last\n  asc_nulls_last\n  # in the descending order, nulls first\n  desc\n  # in the descending order, nulls first\n  desc_nulls_first\n  # in the descending order, nulls last\n  desc_nulls_last\n}\n\ninput VRFVerificationKey_comparison_exp {\n  _eq: VRFVerificationKey\n  _in: [VRFVerificationKey]\n  _is_null: Boolean\n  _neq: VRFVerificationKey\n  _nin: [VRFVerificationKey]\n}\n"}},[[206,1,2]]]);
//# sourceMappingURL=main.88e15129.chunk.js.map